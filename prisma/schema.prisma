generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//####################################
// Enumerations
//####################################

enum TokenType {
  VERIFY_EMAIL
  FORGOT_PASSWORD
}

enum Status {
  PENDING
  IN_PROGRESS
  COMPLETE
  ERROR
}

enum Visibility {
  HIDDEN
  AFTER_DUE_DATE
  AFTER_PUBLISHED
  VISIBLE
}

//####################################
// User
//####################################

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  password      String
  firstName     String
  lastName      String
  avatar        String?
  isVerified    Boolean  @default(false)
  isInstructor  Boolean  @default(false)
  isDeactivated Boolean  @default(false)
  createdAt     DateTime @default(now()) @db.Timestamptz
  updatedAt     DateTime @updatedAt @db.Timestamptz
}

//####################################
// Assignment
//####################################

model Assignment {
  id          String       @id @default(cuid())
  name        String
  releaseDate DateTime     @db.Timestamptz
  autograder  String
  leaderboard Boolean      @default(false)
  createdAt   DateTime     @default(now()) @db.Timestamptz
  updatedAt   DateTime     @updatedAt @db.Timestamptz
  // submission relation
  submissions Submission[]
}

//####################################
// Submission
//####################################
model Submission {
  id           String     @id @default(cuid())
  status       Status     @default(PENDING)
  score        Float      @default(0.0)
  email        String
  output       String     @default("")
  source       String
  createdAt    DateTime   @default(now()) @db.Timestamptz
  updatedAt    DateTime   @updatedAt @db.Timestamptz
  // assignment relation
  assignmentId String
  assignment   Assignment @relation(fields: [assignmentId], references: [id], onDelete: Cascade)
  // test relation
  tests        TestCase[]
}

//####################################
// Test Case
//####################################

model TestCase {
  id           String     @id @default(cuid())
  name         String
  score        Float      @default(0.0)
  output       String     @default("")
  visibility   Visibility @default(HIDDEN)
  createdAt    DateTime   @default(now()) @db.Timestamptz
  updatedAt    DateTime   @updatedAt @db.Timestamptz
  // submission relation
  submissionId String
  submission   Submission @relation(fields: [submissionId], references: [id], onDelete: Cascade)
}

//####################################
// Token
//####################################

model Token {
  id         String    @id @default(cuid())
  expiration BigInt
  type       TokenType
  email      String
  isUsed     Boolean   @default(false)
  createdAt  DateTime  @default(now()) @db.Timestamptz
  updatedAt  DateTime  @updatedAt @db.Timestamptz
}
